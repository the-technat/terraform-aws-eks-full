server:
  extraArgs:
    envflag.enable: "true"
    envflag.prefix: VM_
    loggerFormat: json
    promscrape.maxDroppedTargets: "16000"
    maxLabelsPerTimeseries: "50"
    promscrape.maxScrapeSize: "32MB"
  persistentVolume:
    enabled: true
    storageClass: "ebs"
    size: 16Gi

  ingress:
    enabled: true
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/force-ssl-redirect: 'true'
    hosts:
      - name: ${fqdn}
        path: /
        port: http
    tls:
      - secretName: vmselect-ingress-tls
        hosts:
          - ${fqdn}
    ingressClassName: ${class}
    pathType: Prefix

  scrape:
    enabled: true
    config:
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: victoriametrics
          static_configs:
            - targets: [ "localhost:8428" ]
        - job_name: "kubernetes-apiservers"
          kubernetes_sd_configs:
            - role: endpoints
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels:
                [
                    __meta_kubernetes_namespace,
                    __meta_kubernetes_service_name,
                    __meta_kubernetes_endpoint_port_name,
                ]
              action: keep
              regex: default;kubernetes;https
        - job_name: "kubernetes-nodes" # also known as kubelet endpoints
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [ __meta_kubernetes_node_name ]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics
        - job_name: "kubernetes-nodes-cadvisor" # cadvisor exportes container runtime metrics via kubelet
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [ __meta_kubernetes_node_name ]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
          # ignore timestamps of cadvisor's metrics by default
          # more info here https://github.com/VictoriaMetrics/VictoriaMetrics/issues/4697#issuecomment-1656540535
          honor_timestamps: false 
        - job_name: "kubernetes-service-endpoints" # this is the scrape rule 99% of the cluster cares about
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - action: drop
              source_labels: [ __meta_kubernetes_pod_container_init ]
              regex: true
            # the following rules is meaningful but I don't want to adjust every single addon
            # - action: keep_if_equal
            #   source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number ]
            - source_labels:
                [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]
              action: keep
              regex: true
            - source_labels:
                [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels:
                [ __meta_kubernetes_service_annotation_prometheus_io_path ]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
                [
                    __address__,
                    __meta_kubernetes_service_annotation_prometheus_io_port,
                ]
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [ __meta_kubernetes_namespace ]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [ __meta_kubernetes_service_name ]
              action: replace
              target_label: kubernetes_name
            - source_labels: [ __meta_kubernetes_pod_node_name ]
              action: replace
              target_label: kubernetes_node
        - job_name: "kubernetes-pods" # some special cases require scraping of the pods directly
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - action: drop
              source_labels: [ __meta_kubernetes_pod_container_init ]
              regex: true
            # the following rules is meaningful but I don't want to adjust every single addon
            # - action: keep_if_equal
            #   source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number ]
            - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
              action: keep
              regex: true
            - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
                [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [ __meta_kubernetes_namespace ]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [ __meta_kubernetes_pod_name ]
              action: replace
              target_label: kubernetes_pod_name
          ## End of COPY
    