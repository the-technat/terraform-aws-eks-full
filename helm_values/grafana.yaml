replicas: 1

ingress:
  enabled: true
  ingressClassName: ${class}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - ${host}
  tls:
    - secretName: grafana-tls
      hosts:
        - ${host}

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: VictoriaMetrics
        type: prometheus
        orgId: 1
        url: http://victoria-metrics-victoria-metrics-single-server.victoria-metrics.svc.cluster.local:8428
        access: proxy
        isDefault: true
        updateIntervalSeconds: 10
        editable: false
      - name: CloudWatch
        type: cloudwatch
        jsonData:
          authType: default
          defaultRegion: ${region}
        editable: false

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "upstream"
        orgId: 1
        folder: "Upstream"
        type: file
        disableDeletion: true
        editable: false
        options:
          path: /var/lib/grafana/dashboards/upstream

dashboards:
  upstream:
    victoriametrics:
      gnetId: 10229
      revision: 33
      datasource: VictoriaMetrics
    kubernetes:
      gnetId: 14205
      revision: 1
      datasource: VictoriaMetrics
    aws_ec2:
      gnetId: 11265
      revision: 2
      datasource: CloudWatch
    aws_ec2_1:
      gnetId: 617
      revision: 4
      datasource: CloudWatch
    aws_ebs:
      gnetId: 623
      revision: 5
      datasource: CloudWatch
    aws_nlb:
      gnetId: 12111
      revision: 2
      datasource: CloudWatch
    cluster_autoscaler:
      gnetId: 3831
      revision: 1
      datasource: VictoriaMetrics
    coredns:
      gnetId: 14981
      revision: 2
      datasource: VictoriaMetrics
    ingress_nginx:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/nginx.json
      token: ""
      datasource: VictoriaMetrics

service:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"

# Please note: configs defined in YAML here represent the source of thruth
# configs done in the UI will persist pod-restarts due to the PV
# but in case the PV is lost (which can happen), the configs will be gone
persistence:
  type: statefulset
  enabled: true
  storageClassName: ebs

adminUser: admin
# adminPassword: set via argocd set

serviceAccount:
  create: true
  name:
  annotations:
    eks.amazonaws.com/role-arn: ${rolearn} # to provide access to cloudwatch

sidecar:
  dashboards:
    enabled: true
  resource: configmap # don't read secrets in your namespace!

useStatefulSet: true
